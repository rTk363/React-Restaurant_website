{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","Button","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","color","Component","Footer","Loading","baseUrl","RenderMenuItem","dish","Card","CardImg","image","CardImgOverlay","CardTitle","Menu","menu","dishes","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadLoading","leadErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","resetFeedbackForm","role","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","ComponentForm","isCommentModalOpen","toggleCommentModal","postComment","dishId","rating","author","comment","outline","class","aria-hidden","defaultValue","RenderDish","top","RenderComments","comments","List","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","RenderLeader","console","log","Media","tag","left","object","body","heading","About","leaders","CardHeader","title","list","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","ADD_LEADS","LEADS_FAILED","LEADS_LOADING","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","message","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadsLoading","leadsFailed","addLeads","leads","Main","fetchDishes","fetchComments","fetchPromos","fetchLeads","classNames","timeout","location","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","key","withRouter","connect","Feedback","newFeedback","firstname","lastname","telnum","email","agree","contactType","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10a7a98d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Jumbotron, Navbar, Nav, NavbarToggler, Collapse, \r\n  NavItem, NavbarBrand, Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen,\r\n    });\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img\r\n                src=\"assets/images/logo.png\"\r\n                height=\"30\"\r\n                width=\"41\"\r\n                alt=\"Ristorante con Fusion\"\r\n              />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\"></span> About us\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Ristorante con Fusion</h1>\r\n                <p>\r\n                  We take inspiration from the World's best cuisines, and create\r\n                  a unique fusion experience. Our lipsmacking creations will\r\n                  tickle your culinary senses!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n          <Form onSubmit={this.handleLogin}>\r\n            <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                    innerRef={(input) => this.username = input} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <Input type=\"password\" id=\"password\" name=\"password\"\r\n                innerRef={(input) => this.password = input}  />\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" name=\"remember\"\r\n                innerRef={(input) => this.remember = input}  />\r\n                Remember me\r\n              </Label>\r\n            </FormGroup>\r\n            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n          </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-4 offset-1 col-sm-2\">\r\n            <h5>Links</h5>\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <Link to=\"/home\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/aboutus\">About</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/menu\">Menu</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/contactus\">Contact</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-7 col-sm-5\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope fa-lg\"></i>:{\" \"}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 align-self-center\">\r\n            <div className=\"text-center\">\r\n              <a\r\n                className=\"btn btn-social-icon btn-google\"\r\n                href=\"http://google.com/+\"\r\n              >\r\n                <i className=\"fa fa-google-plus\"></i>\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-facebook\"\r\n                href=\"http://www.facebook.com/profile.php?id=\"\r\n              >\r\n                <i className=\"fa fa-facebook\"></i>\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-linkedin\"\r\n                href=\"http://www.linkedin.com/in/\"\r\n              >\r\n                <i className=\"fa fa-linkedin\"></i>\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-twitter\"\r\n                href=\"http://twitter.com/\"\r\n              >\r\n                <i className=\"fa fa-twitter\"></i>\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-google\"\r\n                href=\"http://youtube.com/\"\r\n              >\r\n                <i className=\"fa fa-youtube\"></i>\r\n              </a>\r\n              <a className=\"btn btn-social-icon\" href=\"mailto:\">\r\n                <i className=\"fa fa-envelope-o\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-auto\">\r\n            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12 justify-content-center\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl= 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadLoading} errMess={props.leadErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React,{ Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle, Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalHeader, ModalBody, Label, Row } from 'reactstrap';\r\nimport { List } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n    class ComponentForm extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { \r\n                isCommentModalOpen: false\r\n            }\r\n            this.toggleCommentModal = this.toggleCommentModal.bind(this);\r\n            this.handleSubmit=this.handleSubmit.bind(this);\r\n        }\r\n        toggleCommentModal(){\r\n            this.setState({isCommentModalOpen: !this.state.isCommentModalOpen});\r\n        }\r\n        handleSubmit(values){\r\n            this.toggleCommentModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n        render() { \r\n            return (\r\n                <div>\r\n                    <Button outline onClick={this.toggleCommentModal}><i class=\"fa fa-lg fa-pencil\" aria-hidden=\"true\"></i> Submit Comment</Button>{' '}\r\n                    <Modal isOpen={this.state.isCommentModalOpen} toggle={this.toggleCommentModal}>\r\n                        <ModalHeader toggle={this.toggleCommentModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <div className=\"container\">\r\n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"rating\">Rating</Label>\r\n                                        <Control.select model=\".rating\" name=\"rating\" id=\"rating\" className=\"form-control\" defaultValue=\"1\">\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </Control.select>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"author\">Your Name</Label>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\"\r\n                                            validators={{\r\n                                                required,minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}/>\r\n                                        <Errors className=\"text-danger\" model=\".yourname\" show=\"touched\" messages={{\r\n                                            required : ' Must be greater than 2 characters',\r\n                                            minLength: ' Must be greater than 2 characters',\r\n                                            maxLength: ' Must be 15 characters or less',\r\n                                        }} />\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                            <Label htmlFor=\"comment\">Comment</Label>\r\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" placeholder=\"\" rows=\"6\" className=\"form-control\"/>        \r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Row>\r\n                                </LocalForm>\r\n                            </div>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    function RenderDish({dish}){\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n    function RenderComments({comments, postComment, dishId}){\r\n        if(comments!=null){\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <List type=\"unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                                return (\r\n                                    <Fade in>\r\n                                        <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </List>\r\n                    <ComponentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            <div></div>\r\n        }\r\n    }\r\n    const DishDetail= (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish!=null){          \r\n            return (  \r\n                <div class=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish={props.dish} />\r\n                        </div>\r\n                        <RenderComments comments={props.comments} \r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }  \r\n    }\r\n \r\nexport default DishDetail;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nfunction RenderLeader({leader, isLoading, errMess}){\r\n    console.log(isLoading+' '+errMess);\r\n        return(\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                    <Media tag=\"li\">\r\n                        <Media left>\r\n                            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading>{leader.name}</Media>\r\n                            <div><>{leader.designation}</></div>\r\n                            <p className=\"mt-2\">{leader.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n            </div>\r\n        )\r\n}\r\nfunction About(props) {\r\n    const leaders = props.leaders.map((leader) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <Loading />\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <h4>{props.errMess}</h4>\r\n            );\r\n        }\r\n        else \r\n        return (\r\n            <Fade in>\r\n                <RenderLeader leader={leader} isLoading={props.isLoading} errMess={props.errMess}/>\r\n            </Fade>\r\n        );\r\n    });\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    \r\n                        <Media list>\r\n                            <Stagger in>\r\n                                {leaders}\r\n                            </Stagger>\r\n                        </Media>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADS = 'ADD_LEADS';\r\nexport const LEADS_FAILED = 'LEADS_FAILED';\r\nexport const LEADS_LOADING = 'LEADS_LOADING';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment= (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeads = () => (dispatch) => {\r\n    \r\n  dispatch(leadsLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leads => dispatch(addLeads(leads)))\r\n    .catch(error => dispatch(leadsFailed(error.message)));\r\n}\r\n\r\nexport const leadsLoading = () => ({\r\n  type: ActionTypes.LEADS_LOADING\r\n});\r\n\r\nexport const leadsFailed = (errmess) => ({\r\n  type: ActionTypes.LEADS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeads = (leads) => ({\r\n  type: ActionTypes.ADD_LEADS,\r\n  payload: leads\r\n});\r\n\r\nexport const postFeedback = (Feedback) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: Feedback.firstname,\r\n    lastname: Feedback.lastname,\r\n    telnum: Feedback.telnum,\r\n    email: Feedback.email,\r\n    agree: Feedback.agree,\r\n    contactType: Feedback.contactType,\r\n    message: Feedback.message,\r\n  };\r\n  newFeedback.date=new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(Feedback => {alert(JSON.stringify(Feedback))})\r\n  .catch(error =>  { console.log('post Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Menu from './MenuComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, postFeedback, fetchLeads, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (Feedback) => dispatch(postFeedback(Feedback)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeads: () => dispatch(fetchLeads())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeads();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadLoading={this.props.leaders.isLoading}\r\n          leadErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} \r\n                                                                  isLoading={this.props.leaders.isLoading}\r\n                                                                  errMess={this.props.leaders.errMess}/>} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \r\n                                                                      postFeedback={this.props.postFeedback}/>} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import Main from './components/MainComponent';\nimport './App.css';\nimport { Component } from 'react';\nimport { BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}